package menu;

import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ebelm
 */
public class Frame_Estancia extends javax.swing.JFrame {
    
    int select_row = -1;
    String cli_select;
    int hab_id_select;
    String fecha_llegada;
    String fecha_salida;
    int dias_select =0;
    Connection con = null;
    hotel.Inicio_sesion_Frame f;
    hotel.Frame_Menu fm;
    Vector columnas = new Vector();
    Vector fila     = new Vector();
    Vector datos    = new Vector();
    DefaultTableModel    modelo;
    /**
     * Creates new form Frame_Estancia
     */
    public Frame_Estancia() {
        initComponents();
    }
    public Frame_Estancia(Connection _con,hotel.Inicio_sesion_Frame _f, hotel.Frame_Menu _fm) {
        initComponents();
        con=_con;
        f=_f;
        fm=_fm;
        Actualizarboxclientes();
        Actualizarboxdias();
        Actualizarboxhabitaciones();
        columnas.add( "Cliente" );
        columnas.add( "Habitacion" );
        columnas.add( "Fecha de Llegada" );
        columnas.add( "Fecha de Salida" );
        columnas.add( "Total" );
        Actualizartabla();
       jLabel1.setVisible(false);
       jLabel3.setVisible(false);
       jLabel4.setVisible(false);
       jcbxCliente.setVisible(false);
       jcbxDias.setVisible(false);
       jcbxHabitacion.setVisible(false);
       jbtnActualizar.setVisible(false);
       
       ImageIcon wallpaper = new ImageIcon("src/imagenes/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(labelFonfo.getWidth(),
                labelFonfo.getHeight(), Image.SCALE_DEFAULT));
        labelFonfo.setIcon(icono);
        this.repaint();
    }
    
    
    
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/Emojin.png"));
        return  retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtableEstancias = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jbtnmodificar = new javax.swing.JButton();
        jbtneliminar = new javax.swing.JButton();
        jbtnRegresar = new javax.swing.JButton();
        jcbxCliente = new javax.swing.JComboBox<>();
        jcbxHabitacion = new javax.swing.JComboBox<>();
        jcbxDias = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtnActualizar = new javax.swing.JButton();
        labelFonfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estancias");
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtableEstancias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cliente", "Habitacion", "Fecha de Llegada", "Fecha de Salida", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableEstancias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableEstanciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtableEstancias);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 720, 147));

        jLabel2.setFont(new java.awt.Font("Century", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Estancias");
        jLabel2.setToolTipText("titulo");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));

        jbtnmodificar.setBackground(new java.awt.Color(102, 153, 255));
        jbtnmodificar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbtnmodificar.setForeground(new java.awt.Color(255, 255, 255));
        jbtnmodificar.setText("Modificar");
        jbtnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnmodificarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnmodificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, 40));

        jbtneliminar.setBackground(new java.awt.Color(255, 102, 102));
        jbtneliminar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbtneliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbtneliminar.setText("Eliminar");
        jbtneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtneliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtneliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 110, 40));

        jbtnRegresar.setBackground(new java.awt.Color(255, 102, 102));
        jbtnRegresar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jbtnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        jbtnRegresar.setText("Regresar");
        jbtnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(629, 290, -1, 40));

        jcbxCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcbxCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbxCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        jcbxHabitacion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcbxHabitacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbxHabitacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, -1, -1));

        jcbxDias.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcbxDias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbxDias, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 290, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Cliente:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 60, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Habitacion:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Dias:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 260, 40, -1));

        jbtnActualizar.setBackground(new java.awt.Color(153, 255, 255));
        jbtnActualizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbtnActualizar.setText("Actualizar");
        jbtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, 140, 60));
        getContentPane().add(labelFonfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 780, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtableEstanciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableEstanciasMouseClicked
        select_row = jtableEstancias.getSelectedRow();
        cli_select = jtableEstancias.getValueAt(select_row, 0).toString();
        hab_id_select = Integer.parseInt(jtableEstancias.getValueAt(select_row, 1).toString());
        fecha_llegada = jtableEstancias.getValueAt(select_row, 2).toString();
        fecha_salida = jtableEstancias.getValueAt(select_row, 3).toString();
    }//GEN-LAST:event_jtableEstanciasMouseClicked

    private void jbtnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnmodificarActionPerformed
        if(select_row>=0){
        try {
            String sql = "SELECT dias('"+fecha_llegada+"','"+fecha_salida+"')";
            PreparedStatement ps = con.prepareStatement( sql );
            ResultSet rs = ps.executeQuery();
            if(rs.next())
                dias_select = rs.getInt(1);
            } catch (Exception e) {
            System.out.println( e );
        }
        
        jcbxCliente.setSelectedItem(cli_select);
        jcbxDias.setSelectedIndex(dias_select-1);
        Actualizarboxhabitaciones();
        jcbxHabitacion.addItem(Integer.toString(hab_id_select));
        jcbxHabitacion.setSelectedIndex(jcbxHabitacion.getItemCount()-1);
       jLabel1.setVisible(true);
       jLabel3.setVisible(true);
       jLabel4.setVisible(true);
       jcbxCliente.setVisible(true);
       jcbxDias.setVisible(true);
       jcbxHabitacion.setVisible(true);
       jbtnActualizar.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this,"No has seleccionado una estancia para Modificar","No seleccion", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jbtnmodificarActionPerformed

    private void jbtnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRegresarActionPerformed
        fm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtnRegresarActionPerformed

    private void jbtneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtneliminarActionPerformed
        if(select_row>=0)
        {
            try {
                String sql = "call eliminar_estancia('"+cli_select+"',"+hab_id_select+",'"+fecha_llegada+"')";
                Statement ps = con.createStatement();
                ps.executeUpdate(sql);
                ps.close();
                f.actulizar_sesion();
            } catch (Exception e) {
                System.out.println( e );
            }
            Actualizartabla();

        }
        else{
            JOptionPane.showMessageDialog(this,"No has seleccionado una Estancia para Eliminar","No seleccion", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jbtneliminarActionPerformed

    private void jbtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnActualizarActionPerformed
        String nombre_cli =jcbxCliente.getSelectedItem().toString();
        int    id_hab = Integer.parseInt(jcbxHabitacion.getSelectedItem().toString());
        int     dias = Integer.parseInt(jcbxDias.getSelectedItem().toString());
        
        try {
                String sql = "call actualizar_estancia('"+cli_select+"',"+hab_id_select+",'"+nombre_cli+"',"+id_hab+","+dias+")";
                Statement ps = con.createStatement();
                ps.executeUpdate(sql);
                ps.close();
                f.actulizar_sesion();
            } catch (Exception e) {
                System.out.println( e );
            }
            Actualizartabla();
            Actualizarboxhabitaciones();
            
       jLabel1.setVisible(false);
       jLabel3.setVisible(false);
       jLabel4.setVisible(false);
       jcbxCliente.setVisible(false);
       jcbxDias.setVisible(false);
       jcbxHabitacion.setVisible(false);
       jbtnActualizar.setVisible(false);
       Actualizarboxhabitaciones();
    }//GEN-LAST:event_jbtnActualizarActionPerformed
 
public void Actualizartabla()   
    {
    try {
       
        String sql = "SELECT * FROM vActEstancia";
        PreparedStatement ps = con.prepareStatement( sql );
        ResultSet rs = ps.executeQuery();
        datos.removeAllElements();
        while (rs.next()){
                String    cliente   = rs.getString("cli_nombre" );
                int habitacion      = rs.getInt  ( "hab_codigo" );
                String    fllegada  = rs.getString( "est_fechallegada" );
                String    fsalida   = rs.getString("est_fechasalida" );
                int    total        = rs.getInt("est_total" );
                
        fila = new Vector ();
        fila.add( cliente );
        fila.add( habitacion );
        fila.add( fllegada );
        fila.add( fsalida );
        fila.add(total);
        
        datos.add( fila );
        }
        modelo = new DefaultTableModel(datos, columnas);
        jtableEstancias.setModel(modelo);
    } catch (Exception ex) {System.out.println(ex);
    }
    }
     public  void Actualizarboxclientes(){
     try {       
        String sql = "SELECT * FROM vActEst_CboxClientes";
        PreparedStatement ps = con.prepareStatement( sql );
        ResultSet rs = ps.executeQuery();
        jcbxCliente.removeAllItems();
        while (rs.next()){
                String    nombre      = rs.getString     ( 1 );       
        jcbxCliente.addItem(nombre);
        }
            
    } catch (Exception ex) {System.out.println(""+ex);}
    }
     public  void Actualizarboxhabitaciones(){
     try {       
        String sql = "SELECT hab_codigo FROM habitacion WHERE hab_disponible like 'disponible'";
        PreparedStatement ps = con.prepareStatement( sql );
        ResultSet rs = ps.executeQuery();
        jcbxHabitacion.removeAllItems();
        while (rs.next()){
                String    nombre      = rs.getString     ( 1 );       
        jcbxHabitacion.addItem(nombre);
        }
            
    } catch (Exception ex) {System.out.println(""+ex);}
    }
     public  void Actualizarboxdias(){
         jcbxDias.removeAllItems();
         for (int i = 0; i < 40; i++) {
             jcbxDias.addItem(Integer.toString(i+1));
         }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_Estancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_Estancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_Estancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_Estancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame_Estancia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnActualizar;
    private javax.swing.JButton jbtnRegresar;
    private javax.swing.JButton jbtneliminar;
    private javax.swing.JButton jbtnmodificar;
    private javax.swing.JComboBox<String> jcbxCliente;
    private javax.swing.JComboBox<String> jcbxDias;
    private javax.swing.JComboBox<String> jcbxHabitacion;
    private javax.swing.JTable jtableEstancias;
    private javax.swing.JLabel labelFonfo;
    // End of variables declaration//GEN-END:variables
}
